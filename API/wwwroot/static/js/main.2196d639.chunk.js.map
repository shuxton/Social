{"version":3,"sources":["app/models/pagination.ts","app/api/agent.ts","app/models/activity.ts","app/models/profile.ts","app/stores/activityStore.ts","app/stores/profileStore.ts","app/stores/userStore.ts","app/stores/store.ts","app/stores/commonStore.ts","app/stores/modalStore.ts","app/stores/commentStore.ts","app/layout/navbar.tsx","features/activities/dashboard/ActivityFilter.tsx","features/profiles/FollowButton.tsx","features/profiles/ProfileCard.tsx","features/activities/dashboard/ActivityListItemAttendee.tsx","features/activities/dashboard/ActivityListItem.tsx","features/activities/dashboard/ActivityList.tsx","features/activities/dashboard/ActivityListItemPlaceholder.tsx","features/activities/dashboard/ActivityDashboard.tsx","app/common/form/MyTextInput.tsx","features/users/LoginForm.tsx","features/errors/ValidationError.tsx","features/users/RegisterForm.tsx","app/home/HomePage.tsx","app/layout/LoadingComponents.tsx","app/common/form/MyTextArea.tsx","app/common/form/MySelectInput.tsx","app/common/options/categoryOptions.ts","app/common/form/MyDateInput.tsx","features/activities/form/ActivityForm.tsx","features/activities/details/ActivityDetailedChat.tsx","features/activities/details/ActivityDetailedHeader.tsx","features/activities/details/ActivityDetailedInfo.tsx","features/activities/details/ActivityDetailedSidebar.tsx","features/activities/details/ActivityDetails.tsx","features/errors/TestError.tsx","features/errors/NotFound.tsx","features/errors/ServerError.tsx","app/common/modals/ModalContainer.tsx","app/common/imageUpload/PhotoWidgetCropper.tsx","app/common/imageUpload/PhotoWidgetDropzone.tsx","app/common/imageUpload/PhotoUploadWidgets.tsx","features/profiles/ProfilePhoto.tsx","features/profiles/ProfileEditForm.tsx","features/profiles/ProfileAbout.tsx","features/profiles/ProfileFollowings.tsx","features/profiles/ProfileActivities.tsx","features/profiles/ProfileContent.tsx","features/profiles/ProfileHeader.tsx","features/profiles/ProfilePage.tsx","app/layout/PrivateRoute.tsx","app/layout/App.tsx","reportWebVitals.ts","app/layout/ScrollToTop.tsx","index.tsx"],"names":["PaginatedResult","data","pagination","this","Pagingparams","pageNumber","pageSize","axios","defaults","baseURL","process","interceptors","request","use","config","token","store","commonStore","headers","Authorization","response","a","JSON","parse","error","status","toast","method","errors","hasOwnProperty","history","push","modalStateErrors","key","flat","setServerError","Promise","reject","responseBody","requests","url","get","then","body","post","put","delete","agent","Activities","list","params","details","id","create","activity","update","attend","Account","current","login","user","register","Profiles","username","uploadPhoto","file","formData","FormData","append","setMainPhoto","deletePhoto","updateProfile","profile","updateFollowing","listFollowings","predicate","listActivities","Activity","init","Object","assign","ActivityFormValues","undefined","title","category","description","date","city","venue","Profile","displayName","image","ActivityStore","activityRegistry","Map","selectedActivity","editMode","loading","loadingInitial","pagingParams","set","setPagingParams","setPredicate","value","resetPredicate","forEach","loadActivities","axiosParams","result","runInAction","setActivity","setPagination","console","log","loadActivity","getActivity","userStore","isGoing","attendees","some","isHost","hostUsername","host","find","x","Date","createActivity","attendee","newActivity","updateActivity","updatedActivity","deleteActivity","updateAttendance","filter","cancelActivityToggle","isCancelled","clearSelectedActivity","updateAttendeeFollowing","following","followersCount","makeAutoObservable","reaction","keys","clear","URLSearchParams","toString","toISOString","Array","from","values","sort","b","getTime","entries","activitiesByDate","reduce","activities","format","ProfileStore","loadingProfile","uploading","followings","loadingFollowings","activeTab","userActivities","loadingActivities","loadUserActivities","setActiveTab","loadProfile","photo","photos","isMain","setImage","p","setDisplayName","activityStore","followingCount","loadFollowings","UserStore","creds","setToken","modalStore","closeModal","logout","window","localStorage","removeItem","getUser","name","getItem","appLoaded","setAppLoaded","setItem","modal","open","openModal","content","profileStore","commentStore","comments","hubConnection","createHubConnection","activityId","HubConnectionBuilder","withUrl","accessTokenFactory","withAutomaticReconnect","configureLogging","LogLevel","Information","build","start","catch","on","comment","createdAt","unshift","stopHubConnection","stop","clearComments","addComment","invoke","StoreContext","createContext","useStore","useContext","observer","Menu","inverted","fixed","Container","Item","as","NavLink","to","exact","header","src","alt","style","marginRight","Button","positive","position","Image","avatar","spaced","Dropdown","pointing","text","Link","icon","onClick","vertical","size","width","marginTop","Header","attached","color","active","has","onChange","Reveal","animated","Content","visible","fluid","hidden","basic","e","preventDefault","handleFollow","Card","Description","str","length","substring","truncate","bio","extra","Icon","styles","borderColor","borderWidth","List","horizontal","map","Popup","hoverable","trigger","bordered","circular","ActivityListItem","Segment","Group","Label","textAlign","ribbon","secondary","clearing","floated","groupedActivites","group","sub","ActivityListItemPlaceholder","Placeholder","minHeight","Line","Paragraph","disabled","useState","loadingNext","setLoadingNext","useEffect","Grid","Column","pageStart","loadMore","currentPage","hasMore","totalPages","initialLoad","Loader","MyTextInput","props","useField","field","meta","Form","Field","touched","label","initialValues","email","password","onSubmit","setErrors","handleSubmit","isSubmitting","className","autoComplete","placeholder","type","render","marginBottom","ValidationErrors","Message","err","i","validationSchema","Yup","required","isValid","dirty","marginBotton","isLoggedIn","LoadingComponent","Dimmer","MyTextArea","MySelectInput","helpers","Select","clearable","options","d","setValue","onBlur","setTouched","categoryOptions","MyDateInput","selected","useHistory","useParams","nullable","enableReinitialize","uuid","handleFormSubmit","rows","placeholderText","showTimeSelect","timeCaption","dateFormat","border","resetForm","onKeyPress","shiftKey","Comment","Avatar","Author","Metadata","formatDistanceToNow","Text","whiteSpace","activityImageStyle","activityImageTextStyle","bottom","left","height","padding","zIndex","top","verticalAlign","relaxed","divided","Extra","TestErrors","widths","baseUrl","primary","NotFound","Inline","message","Modal","onClose","PhotoWidgetCropper","imagePreview","setCropper","initialAspectRatio","aspectRatio","preview","guides","viewMode","autoCropArea","background","onInitialized","cropper","PhotoWidgetDropzone","setFiles","dzStyles","borderRadius","paddingTop","onDrop","useCallback","acceptedFiles","URL","createObjectURL","useDropzone","getRootProps","getInputProps","isDragActive","PhotoUploadWidget","files","revokeObjectURL","contents","overflow","getCroppedCanvas","toBlob","blob","isCurrentUser","addPhotoMode","setAddPhotoMode","target","setTarget","Tab","Pane","itemsPerRow","currentTarget","handleSetMainPhoto","handleDeletePhoto","setEditMode","panes","menuItem","pane","menu","onTabChange","activeIndex","handleTabChange","objectFit","Meta","ProfileContent","ProfilePhoto","menuPosition","GridColumn","Statistic","Divider","PrivateRote","Component","component","rest","location","useLocation","finally","hideProgressBar","path","HomePage","ActivityDashboard","ActivityDetails","ActivityForm","ProfilePage","ServerError","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ScrollToTop","pathname","scrollTo","createBrowserHistory","ReactDOM","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.2196d639.chunk.js","sourcesContent":["export interface Pagination {\r\n    currentPage: number;\r\n    itemsPerPage: number;\r\n    totalItems: number;\r\n    totalPages: number;\r\n}\r\n\r\nexport class PaginatedResult<T>{\r\n    data: T;\r\n    pagination: Pagination;\r\n\r\n    constructor(data: T,pagination:Pagination){\r\n         this.data = data;\r\n         this.pagination = pagination;\r\n    }\r\n}\r\n\r\n\r\nexport class Pagingparams{\r\n    pageNumber;\r\n    pageSize;\r\n\r\n    constructor(pageNumber=1,pageSize=2){\r\nthis.pageNumber=pageNumber;\r\nthis.pageSize=pageSize;\r\n    }\r\n}","import axios, { AxiosError, AxiosResponse } from 'axios';\r\nimport { toast } from 'react-toastify';\r\nimport { history } from '../..';\r\nimport { Activity, ActivityFormValues } from '../models/activity';\r\nimport { PaginatedResult } from '../models/pagination';\r\nimport { Profile, UserActivity } from '../models/profile';\r\nimport { User, UserFormValues } from '../models/user';\r\nimport { store } from '../stores/store';\r\n\r\nconst sleep = (delay:number)=>{\r\n    return new Promise((resolve)=>{\r\n        setTimeout(resolve,delay)\r\n    })\r\n}\r\n\r\naxios.defaults.baseURL= process.env.REACT_APP_API_URL;\r\n\r\n\r\naxios.interceptors.request.use(config => {\r\n    const token = store.commonStore.token;\r\n    if (token) config.headers.Authorization = `Bearer ${token}`\r\n    return config;\r\n})\r\n\r\naxios.interceptors.response.use(async response=>{\r\n    if(process.env.NODE_ENV === 'development')\r\n        await sleep(1000);\r\n        const pagination = response.headers['pagination'];\r\n        if(pagination){\r\n            response.data = new PaginatedResult(response.data,JSON.parse(pagination));\r\n            return response as AxiosResponse<PaginatedResult<any>>\r\n        }\r\n        return response;\r\n},(error:AxiosError)=>{\r\n    const {data,status,config} = error.response!;\r\n    switch(status){\r\n        case 400:\r\n            if(typeof data === 'string'){\r\n                toast.error('bad request');\r\n                }\r\n            if(config.method === 'get' && data.errors.hasOwnProperty('id')){\r\n                history.push('/not-found')\r\n            }\r\n            if(data.errors){\r\n                const modalStateErrors = [];\r\n                for (const key in data.errors){\r\n                    if(data.errors[key]){\r\n                        modalStateErrors.push(data.errors[key])\r\n                    }\r\n                }\r\n                throw modalStateErrors.flat(); \r\n            }\r\n            break;\r\n        case 401:\r\n            toast.error('unauthorised');  \r\n            break;\r\n        case 404:\r\n            history.push('/not-found');  \r\n            break;\r\n        case 500:\r\n            store.commonStore.setServerError(data);\r\n             history.push('server-error');\r\n            break;\r\n    }\r\n    return Promise.reject(error);\r\n})\r\n\r\n\r\n\r\nconst responseBody =<T> (response:AxiosResponse<T>)=>response.data;\r\n\r\nconst requests = {\r\n    get: <T>(url:string)=>axios.get<T>(url).then(responseBody),\r\n    post: <T>(url:string, body:{})=>axios.post<T>(url,body).then(responseBody),\r\n    put: <T>(url:string, body:{})=>axios.put<T>(url,body).then(responseBody),\r\n    del: <T>(url:string)=>axios.delete<T>(url).then(responseBody),\r\n\r\n}\r\n\r\n\r\nconst Activities={\r\n    list:(params:URLSearchParams)=> axios.get<PaginatedResult<Activity[]>>('/activities',{params}).then(responseBody),\r\n    details: (id:string)=> requests.get<Activity>(`/activities/${id}`),\r\n    create: (activity: ActivityFormValues)=> requests.post<void>('/activities',activity),\r\n    update: (activity: ActivityFormValues)=> requests.put<void>(`/activities/${activity.id}`,activity),\r\n    delete: (id: string)=> requests.del<void>(`/activities/${id}`),\r\n    attend: (id: string)=> requests.post<void>(`/activities/${id}/attend`,{})\r\n}\r\n\r\nconst Account={\r\n    current:()=>requests.get<User>('/account'),\r\n    login:(user:UserFormValues)=>requests.post<User>('/account/login',user),\r\n    register:(user:UserFormValues)=>requests.post<User>('/account/register',user),\r\n\r\n}\r\n\r\nconst Profiles = {\r\n    get:(username : string)=> requests.get<Profile>(`/profiles/${username}`),\r\n    uploadPhoto: (file:Blob)=>{\r\n    let formData = new FormData();\r\n    formData.append('File',file);\r\n    return axios.post('photos',formData,{\r\n        headers: {'Content-type':'multipart/form-data'}\r\n        \r\n    })},\r\n    setMainPhoto: (id:string) => requests.post(`/photos/${id}/setMain`,{}),\r\n    deletePhoto: (id:string) => requests.del(`/photos/${id}`),\r\n    updateProfile: (profile: Partial<Profile>) => requests.put(`/profiles`, profile),\r\n    updateFollowing: (username: string) => requests.post(`/follow/${username}`,{}),\r\n    listFollowings: (username:string,predicate:string) => requests.get<Profile[]>(`/follow/${username}?predicate=${predicate}`),\r\n    listActivities: (username: string, predicate: string) =>requests.get<UserActivity[]>(`/profiles/${username}/activities?predicate=${predicate}`)\r\n\r\n}\r\n\r\nconst agent={\r\n    Activities,\r\n    Account,\r\n    Profiles\r\n}\r\n\r\nexport default agent;\r\n","import { Profile } from \"./profile\";\r\n\r\nexport interface Activity {\r\n        id: string;\r\n        title: string;\r\n        date: Date | null;\r\n        description: string;\r\n        category: string;\r\n        city: string;\r\n        venue: string;\r\n        hostUsername: string;\r\n        isCancelled: boolean;\r\n        isGoing: boolean;\r\n        isHost: boolean;\r\n        host?: Profile;\r\n        attendees: Profile[]\r\n}\r\n\r\nexport class Activity implements Activity{\r\n        constructor(init?: ActivityFormValues){\r\n                Object.assign(this,init);\r\n        }\r\n}\r\n\r\nexport class ActivityFormValues{\r\n id? : string = undefined;\r\n title: string = '';\r\n category: string ='';\r\n description: string ='';\r\n date: Date | null = null;\r\n city: string = '';\r\n venue: string = '';\r\n\r\n constructor(activity?: ActivityFormValues){\r\n         if(activity){\r\n                 this.id = activity.id;\r\n                 this.title =activity.title;\r\n                 this.category =activity.category;\r\n                 this.description =activity.description;\r\n                 this.date =activity.date;\r\n                 this.city =activity.city;\r\n                 this.venue =activity.venue;\r\n         }\r\n }\r\n\r\n}\r\n\r\n\r\n","import { User } from \"./user\";\r\n\r\nexport interface Profile{\r\n    username: string;\r\n    displayName: string;\r\n    image?: string;\r\n    bio?: string;\r\n    followersCount: number;\r\n    followingCount: number;\r\n    following: boolean;\r\n    photos?: Photo[];\r\n\r\n}\r\n\r\nexport class Profile implements Profile{\r\n   constructor(user:User) {\r\n       this.username = user.username;\r\n       this.displayName = user.displayName;\r\n       this.image = user.image;\r\n   }\r\n}\r\n\r\nexport interface Photo{\r\n    id: string;\r\n    url: string;\r\n    isMain: boolean;\r\n}\r\n\r\nexport interface UserActivity {\r\n    id: string;\r\n    title: string;\r\n    category: string;\r\n    date: Date;\r\n   }","import { format } from \"date-fns\";\r\nimport { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Activity, ActivityFormValues } from \"../models/activity\";\r\nimport { Pagination, Pagingparams } from \"../models/pagination\";\r\nimport { Profile } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ActivityStore{\r\n    activityRegistry = new Map<string,Activity>();\r\n    selectedActivity: Activity | undefined = undefined;\r\n    editMode = false;\r\n    loading = false;\r\n    loadingInitial = false;\r\n    pagination: Pagination | null =null;\r\n    pagingParams = new Pagingparams();\r\n    predicate = new Map().set('all',true);\r\n\r\n    \r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n\r\n        reaction(\r\n            ()=> this.predicate.keys(),\r\n            ()=>{\r\n                this.pagingParams = new Pagingparams();\r\n                this.activityRegistry.clear();\r\n                this.loadActivities();\r\n            }\r\n        )\r\n    }\r\n\r\n    setPagingParams = (pagingParams:Pagingparams)=>{\r\n        this.pagingParams = pagingParams;\r\n    }\r\n\r\n    setPredicate = (predicate:string,value:string|Date)=>{\r\n       const resetPredicate =()=>{\r\n           this.predicate.forEach((value,key)=>{\r\n               if(key!=='startDate') this.predicate.delete(key);\r\n           })\r\n       }\r\n        switch(predicate){\r\n           case 'all':\r\n               resetPredicate();\r\n               this.predicate.set('all',true);\r\n               break;\r\n            case 'isGoing':\r\n                resetPredicate();\r\n                this.predicate.set('isGoing',true);\r\n                break;\r\n            case 'isHost':\r\n                resetPredicate();\r\n                this.predicate.set('isHost',true);\r\n                break;\r\n            case 'startDate':\r\n                this.predicate.delete('startDate');\r\n                this.predicate.set('startDate',value);\r\n                break;\r\n\r\n       }\r\n    }\r\n\r\n    get axiosParams(){\r\n        const params = new URLSearchParams();\r\n        params.append('pageNumber',this.pagingParams.pageNumber.toString())\r\n        params.append('pageSize',this.pagingParams.pageSize.toString())\r\n        this.predicate.forEach((value,key)=>{\r\n            if(key === 'startDate'){\r\n                params.append(key,(value as Date).toISOString())\r\n            }else{\r\n                params.append(key,value)\r\n            }\r\n        })\r\n        return params;\r\n    }\r\n\r\n    get activitiesByDate(){\r\n        return Array.from(this.activityRegistry.values()).sort((a,b)=>\r\n            a.date!.getTime() - b.date!.getTime()\r\n        )\r\n    }\r\n\r\n    get groupedActivites(){\r\n        return Object.entries(\r\n            this.activitiesByDate.reduce((activities,activity)=>{\r\n                const date = format(activity.date!,'dd MMM yyyy')\r\n                activities[date] = activities[date] ? [...activities[date],activity] : [activity];\r\n                return activities;\r\n            },{} as {[key:string]:Activity[]})\r\n        )\r\n    }\r\n\r\n    loadActivities= async ()=>{\r\n      this.loadingInitial = true;\r\n      try{\r\n          const result = await agent.Activities.list(this.axiosParams);\r\n          runInAction(()=>{\r\n            result.data.forEach(activity=>{\r\n                this.setActivity(activity);\r\n              })\r\n              this.loadingInitial=false;\r\n          })\r\n          this.setPagination(result.pagination);\r\n          \r\n      }catch(error){\r\n          console.log(error)\r\n          runInAction(()=>{\r\n          this.loadingInitial=false;  \r\n          })\r\n      }\r\n    }\r\n\r\n    setPagination = (pagination : Pagination) =>{\r\n        this.pagination = pagination; \r\n    }\r\n\r\n    loadActivity = async (id:string)=>{\r\n        let activity = this.getActivity(id);\r\n        if(activity){\r\n            this.selectedActivity = activity;\r\n            return activity;\r\n        }else{\r\n            this.loadingInitial= true;\r\n            try{\r\n              activity = await agent.Activities.details(id);\r\n              this.setActivity(activity);\r\n              runInAction(()=>{\r\n                  this.selectedActivity=activity;\r\n                  this.loadingInitial=false;\r\n                  return activity;\r\n              })\r\n            }catch(error){\r\n                console.log(error)\r\n                runInAction(()=>{\r\n                    this.loadingInitial=false;\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    private getActivity = (id:string)=>{\r\n        return this.activityRegistry.get(id);\r\n    }\r\n\r\n    private setActivity = (activity: Activity)=>{\r\n        const user= store.userStore.user;\r\n        if(user){\r\n            activity.isGoing = activity.attendees!.some(\r\n                a=>a.username===user.username\r\n            )\r\n            activity.isHost = activity.hostUsername === user.username;\r\n            activity.host = activity.attendees?.find(x=>x.username===activity.hostUsername);\r\n            \r\n        }\r\n        activity.date=new Date(activity.date!);\r\n        this.activityRegistry.set(activity.id,activity);\r\n    }\r\n   \r\n\r\n    createActivity = async (activity:ActivityFormValues) =>{\r\n        const user = store.userStore.user;\r\n        const attendee = new Profile(user!);\r\n      try{ \r\n          await agent.Activities.create(activity);\r\n          const newActivity = new Activity(activity);\r\n          newActivity.hostUsername = user!.username;\r\n          newActivity.attendees=[attendee];\r\n          this.setActivity(newActivity);\r\n\r\n          runInAction(()=>{\r\n              this.selectedActivity = newActivity;\r\n          })\r\n      }catch(error){\r\n          console.log(error)\r\n      }\r\n    }\r\n\r\n    updateActivity = async (activity : ActivityFormValues) =>{\r\n        try{\r\n            await agent.Activities.update(activity)\r\n            runInAction(()=>{\r\n                if(activity.id){\r\n                    let updatedActivity ={...this.getActivity(activity.id),...activity}\r\n                    this.activityRegistry.set(activity.id,updatedActivity as Activity);\r\n                    this.selectedActivity = updatedActivity as Activity;\r\n                }\r\n                 \r\n                 \r\n            })\r\n\r\n        }catch(error){\r\n            console.log(error)\r\n        }\r\n    }\r\n\r\n    deleteActivity= async (id:string)=>{\r\n     this.loading = true;\r\n     try{\r\n         await agent.Activities.delete(id);\r\n         runInAction(()=>{\r\n             this.activityRegistry.delete(id);\r\n             this.loading = false;\r\n         })\r\n     }catch(error){\r\n         console.log(error)\r\n         runInAction(()=>{\r\n            this.loading = false;\r\n         })\r\n     }\r\n    }\r\n\r\n    updateAttendance = async()=>{\r\n        const user = store.userStore.user;\r\n        this.loading=true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(()=>{\r\n                if(this.selectedActivity?.isGoing){\r\n                    this.selectedActivity.attendees = \r\n                    this.selectedActivity.attendees?.filter(a=>a.username!==user?.username)\r\n                    this.selectedActivity.isGoing = false;\r\n                }else{\r\n                    const attendee = new Profile(user!);\r\n                    this.selectedActivity?.attendees?.push(attendee);\r\n                    this.selectedActivity!.isGoing = true;\r\n                }\r\n                this.activityRegistry.set(this.selectedActivity!.id,this.selectedActivity!)\r\n            });\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }finally{\r\n            runInAction(()=>this.loading=false);\r\n        }\r\n    }\r\n\r\n    cancelActivityToggle=async()=>{\r\n        this.loading=true;\r\n        try {\r\n            await agent.Activities.attend(this.selectedActivity!.id);\r\n            runInAction(()=>{\r\n                this.selectedActivity!.isCancelled = !this.selectedActivity?.isCancelled\r\n                this.activityRegistry.set(this.selectedActivity!.id,this.selectedActivity!)\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n        } finally{\r\n            runInAction(()=>this.loading=false)\r\n        }\r\n\r\n    }\r\n  \r\n    clearSelectedActivity = ()=>{\r\n        this.selectedActivity = undefined;\r\n    }\r\n\r\n    updateAttendeeFollowing = (username:string) =>{\r\n        this.activityRegistry.forEach(activity=>{\r\n            activity.attendees.forEach(attendee=>{\r\n                if(attendee.username === username){\r\n                    attendee.following ? attendee.followersCount-- : attendee.followersCount++;\r\n                    attendee.following=!attendee.following;\r\n                }\r\n            })\r\n        })\r\n    }\r\n\r\n\r\n}\r\n\r\n\r\n","import { makeAutoObservable, reaction, runInAction } from \"mobx\";\r\nimport agent from \"../api/agent\";\r\nimport { Photo, Profile, UserActivity } from \"../models/profile\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class ProfileStore {\r\n  profile: Profile | null = null;\r\n  loadingProfile = false;\r\n  uploading = false;\r\n  loading = false;\r\n  followings: Profile[] = [];\r\n  loadingFollowings = false;\r\n  activeTab = 0;\r\n  userActivities: UserActivity[] = [];\r\n  loadingActivities = false;\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n\r\n    reaction(\r\n      () => this.activeTab,\r\n      (activeTab) => {\r\n        if (activeTab === 3 || activeTab === 4) {\r\n          const predicate = activeTab === 3 ? \"followers\" : \"following\";\r\n          this.loadFollowings(predicate);\r\n        } else {\r\n          this.followings = [];\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  loadUserActivities = async (username: string, predicate?: string) => {\r\n    this.loadingActivities = true;\r\n    try {\r\n      const activities = await agent.Profiles.listActivities(\r\n        username,\r\n        predicate!\r\n      );\r\n      runInAction(() => {\r\n        this.userActivities = activities;\r\n        this.loadingActivities = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => {\r\n        this.loadingActivities = false;\r\n      });\r\n    }\r\n  };\r\n\r\n  setActiveTab = (activeTab: any) => {\r\n    this.activeTab = activeTab;\r\n  };\r\n\r\n  get isCurrentUser() {\r\n    if (store.userStore && this.profile) {\r\n      return store.userStore.user?.username === this.profile.username;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  loadProfile = async (username: string) => {\r\n    this.loadingProfile = true;\r\n    try {\r\n      const profile = await agent.Profiles.get(username);\r\n      runInAction(() => (this.profile = profile));\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    runInAction(() => (this.loadingProfile = false));\r\n  };\r\n\r\n  uploadPhoto = async (file: Blob) => {\r\n    this.uploading = true;\r\n    try {\r\n      const response = await agent.Profiles.uploadPhoto(file);\r\n      const photo = response.data;\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos?.push(photo);\r\n          if (photo.isMain && store.userStore.user) {\r\n            store.userStore.setImage(photo.url);\r\n            this.profile.image = photo.url;\r\n          }\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    runInAction(() => (this.uploading = false));\r\n  };\r\n\r\n  setMainPhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.setMainPhoto(photo.id);\r\n      store.userStore.setImage(photo.url);\r\n      runInAction(() => {\r\n        if (this.profile && this.profile.photos) {\r\n          this.profile.photos.find((p) => p.isMain)!.isMain = false;\r\n          this.profile.photos.find((p) => p.id === photo.id)!.isMain = true;\r\n          this.profile.image = photo.url;\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    runInAction(() => (this.loading = false));\r\n  };\r\n\r\n  deletePhoto = async (photo: Photo) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.deletePhoto(photo.id);\r\n      runInAction(() => {\r\n        if (this.profile) {\r\n          this.profile.photos = this.profile.photos?.filter(\r\n            (p) => p.id !== photo.id\r\n          );\r\n        }\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n    runInAction(() => (this.loading = false));\r\n  };\r\n\r\n  updateProfile = async (profile: Partial<Profile>) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateProfile(profile);\r\n      runInAction(() => {\r\n        if (\r\n          profile.displayName &&\r\n          profile.displayName !== store.userStore.user?.displayName\r\n        ) {\r\n          store.userStore.setDisplayName(profile.displayName);\r\n        }\r\n        this.profile = { ...this.profile, ...(profile as Profile) };\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  updateFollowing = async (username: string, following: boolean) => {\r\n    this.loading = true;\r\n    try {\r\n      await agent.Profiles.updateFollowing(username);\r\n      store.activityStore.updateAttendeeFollowing(username);\r\n      runInAction(() => {\r\n        if (\r\n          this.profile &&\r\n          this.profile.username !== store.userStore.user?.username &&\r\n          this.profile.username === username\r\n        ) {\r\n          following\r\n            ? this.profile.followersCount++\r\n            : this.profile.followersCount--;\r\n          this.profile.following = !this.profile.following;\r\n        }\r\n        if (\r\n          this.profile &&\r\n          this.profile.username === store.userStore.user?.username\r\n        ) {\r\n          following\r\n            ? this.profile.followingCount++\r\n            : this.profile.followingCount--;\r\n        }\r\n        this.followings.forEach((profile) => {\r\n          if (profile.username === username) {\r\n            profile.following\r\n              ? profile.followersCount--\r\n              : profile.followersCount++;\r\n            profile.following = !profile.following;\r\n          }\r\n        });\r\n        this.loading = false;\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      runInAction(() => (this.loading = false));\r\n    }\r\n  };\r\n\r\n  loadFollowings = async (predicate: string) => {\r\n    this.loadingFollowings = true;\r\n    try {\r\n      const followings = await agent.Profiles.listFollowings(\r\n        this.profile!.username,\r\n        predicate\r\n      );\r\n      runInAction(() => {\r\n        this.followings = followings;\r\n        this.loadingFollowings = false;\r\n      });\r\n    } catch (error) {\r\n      runInAction(() => (this.loadingFollowings = false));\r\n    }\r\n  };\r\n}\r\n","import { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { history } from \"../..\";\r\nimport agent from \"../api/agent\";\r\nimport { User, UserFormValues } from \"../models/user\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class UserStore{\r\n    user:User | null =null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n    \r\n    get isLoggedIn(){\r\n        return !!this.user;\r\n    }\r\n\r\n    login= async(creds:UserFormValues)=>{\r\n        try{\r\n            const user = await agent.Account.login(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(()=>{\r\n                this.user=user;\r\n            })\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n            \r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    logout =()=>{\r\n        store.commonStore.setToken(null);\r\n        window.localStorage.removeItem('jwt');\r\n        this.user = null;\r\n        history.push('/');\r\n    }\r\n\r\n    getUser = async()=>{\r\n        try{\r\n            const user = await agent.Account.current();\r\n            runInAction(()=> this.user = user);\r\n\r\n        }catch(error){\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    register = async (creds: UserFormValues)=>{\r\n        try{\r\n            const user = await agent.Account.register(creds);\r\n            store.commonStore.setToken(user.token);\r\n            runInAction(()=>{\r\n                this.user=user;\r\n            })\r\n            history.push('/activities');\r\n            store.modalStore.closeModal();\r\n            \r\n        }catch(error){\r\n            throw error;\r\n        }\r\n    }\r\n\r\n    setImage = (image:string) =>{\r\n        if(this.user) {\r\n        this.user.image =image;\r\n        }\r\n    }\r\n\r\n    setDisplayName = (name: string) => {\r\n        if (this.user) this.user.displayName = name;\r\n    }\r\n\r\n}","import { createContext, useContext } from \"react\";\r\nimport ActivityStore from \"./activityStore\";\r\nimport CommentStore from \"./commentStore\";\r\nimport CommonStore from \"./commonStore\";\r\nimport ModalStore from \"./modalStore\";\r\nimport ProfileStore from \"./profileStore\";\r\nimport UserStore from \"./userStore\";\r\n\r\ninterface Store{\r\n    activityStore: ActivityStore\r\n    commonStore : CommonStore\r\n    userStore : UserStore\r\n    modalStore : ModalStore\r\n    profileStore : ProfileStore\r\n    commentStore : CommentStore\r\n}\r\n\r\n\r\nexport const store:Store={\r\n    activityStore: new ActivityStore(),\r\n    commonStore: new CommonStore(),\r\n    userStore: new UserStore(),\r\n    modalStore: new ModalStore(),\r\n    profileStore : new ProfileStore(),\r\n    commentStore : new CommentStore(),\r\n\r\n}\r\n\r\nexport const StoreContext = createContext(store);\r\n\r\n\r\nexport function useStore(){\r\n    return useContext(StoreContext)\r\n}","import { makeAutoObservable, reaction } from \"mobx\";\r\nimport { ServerError } from \"../models/serverError\";\r\n\r\nexport default class CommonStore{\r\n    error: ServerError | null =null;\r\n    token: string | null =window.localStorage.getItem('jwt');\r\n    appLoaded = false;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this);\r\n        reaction(\r\n            ()=>this.token,\r\n            token=>{\r\n                if(token){\r\n                    window.localStorage.setItem('jwt',token)\r\n                }else{\r\n                    window.localStorage.removeItem('jwt')\r\n                }\r\n            }\r\n        )\r\n    }\r\n\r\n    setServerError = (error:ServerError)=>{\r\n        this.error=error;\r\n    }\r\n\r\n    setToken=(token :string |null)=>{\r\n        this.token = token;\r\n    }\r\n\r\n    setAppLoaded= () =>{\r\n        this.appLoaded = true;\r\n    }\r\n}","import { makeAutoObservable } from \"mobx\"\r\n\r\n\r\ninterface Modal {\r\n    open: boolean;\r\n    body: JSX.Element | null;\r\n}\r\n\r\nexport default class ModalStore{\r\n    modal:Modal ={\r\n        open: false,\r\n        body: null\r\n    }\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    openModal = (content: JSX.Element)=>{\r\n        this.modal.open =true;\r\n        this.modal.body =content;\r\n    }\r\n\r\n    closeModal = ()=>{\r\n        this.modal.open =false;\r\n        this.modal.body =null;\r\n    }\r\n}","import { HubConnection, HubConnectionBuilder, LogLevel } from \"@microsoft/signalr\";\r\nimport { makeAutoObservable, runInAction } from \"mobx\";\r\nimport { ChatComment } from \"../models/comment\";\r\nimport { store } from \"./store\";\r\n\r\nexport default class CommentStore{\r\n    comments: ChatComment[] =[];\r\n    hubConnection: HubConnection | null =null;\r\n\r\n    constructor(){\r\n        makeAutoObservable(this)\r\n    }\r\n\r\n    createHubConnection = (activityId: string)=>{\r\n        if(store.activityStore.selectedActivity){\r\n            this.hubConnection = new HubConnectionBuilder()\r\n            .withUrl(process.env.REACT_APP_CHAT_URL+'?activityId='+activityId,{\r\n                accessTokenFactory:()=>store.userStore.user?.token!\r\n            })\r\n            .withAutomaticReconnect()\r\n            .configureLogging(LogLevel.Information)\r\n            .build();\r\n\r\n            this.hubConnection.start().catch(error=>console.log('Error establishing the connection: ',error))\r\n\r\n            this.hubConnection.on('LoadComments',(comments : ChatComment[])=>{\r\n              runInAction(()=>{\r\n                  comments.forEach(comment=>{\r\n                    comment.createdAt = new Date(comment.createdAt + 'Z')\r\n                  })\r\n                  this.comments=comments;\r\n              })\r\n            });\r\n\r\n            this.hubConnection.on('ReceiveComment',(comment : ChatComment)=>{\r\n                runInAction(()=>{\r\n                    comment.createdAt = new Date(comment.createdAt)\r\n                    this.comments.unshift(comment);\r\n                })\r\n              });\r\n\r\n        }\r\n    }\r\n\r\n    stopHubConnection = () =>{\r\n        this.hubConnection?.stop().catch(error=>console.log('Error stopping connection: ',error))\r\n    }\r\n\r\n    clearComments = ()=>{\r\n        this.comments=[];\r\n        this.stopHubConnection();\r\n    }\r\n\r\n    addComment = async(values:any)=>{\r\n        values.activityId = store.activityStore.selectedActivity?.id;\r\n        try {\r\n            await this.hubConnection?.invoke('SendComment',values);\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n    }\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link, NavLink } from 'react-router-dom';\r\nimport { Button, Container, Dropdown, Image, Menu } from 'semantic-ui-react';\r\nimport { useStore } from '../stores/store';\r\n\r\n\r\n\r\nexport default observer(function NavBar(){\r\n\r\n    const {userStore:{user,logout}} = useStore()\r\n\r\n    return (\r\n        <Menu inverted fixed='top' >\r\n            <Container>\r\n                <Menu.Item as={NavLink} to='/' exact header>\r\n                    <img src=\"/assets/logo.png\" alt=\"logo\" style={{marginRight: 10}}/>\r\n                    Social\r\n                </Menu.Item>\r\n                <Menu.Item as={NavLink} to='/activities' name=\"Activities\"/>\r\n                <Menu.Item as={NavLink} to='/errors' name=\"Errors\"/>\r\n                 <Menu.Item >\r\n                     <Button as={NavLink} to='/createActivity' positive content='Create Activity'/>\r\n                </Menu.Item>\r\n                <Menu.Item position='right'>\r\n                    <Image src={user?.image || '/assets/user.png'} avatar spaced='right' />\r\n                    <Dropdown pointing='top right' text={user?.displayName}>\r\n                        <Dropdown.Menu>\r\n                          <Dropdown.Item as ={Link} to={`/profiles/${user?.username}`} text='My Profile' icon='user'/>\r\n                          <Dropdown.Item onClick={logout} text='Logout' icon='power'/>\r\n                          </Dropdown.Menu>\r\n                         </Dropdown>\r\n                </Menu.Item>\r\n            </Container>\r\n        </Menu>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport Calendar from 'react-calendar'\r\nimport { Header, Menu } from 'semantic-ui-react'\r\nimport { useStore } from '../../../app/stores/store'\r\n\r\nexport default observer(function ActivityFilter(){\r\n    const {activityStore:{predicate,setPredicate}} = useStore();\r\n\r\n    return(\r\n        <>\r\n        <Menu vertical size='large' style={{width: '100%',marginTop: 25}}>\r\n            <Header icon = 'filter' attached color='teal' content='Filters'/>\r\n            <Menu.Item \r\n            content=\"All Activities\"\r\n            active={predicate.has('all')}\r\n            onClick={()=>setPredicate('all','true')}\r\n            />\r\n            <Menu.Item \r\n            content=\"I'm going\"\r\n            active={predicate.has('isGoing')}\r\n            onClick={()=>setPredicate('isGoing','true')}\r\n            />\r\n            <Menu.Item \r\n            content=\"I'm hosting\"\r\n            active={predicate.has('isHost')}\r\n            onClick={()=>setPredicate('isHost','true')}\r\n            />\r\n\r\n        </Menu>\r\n        <Header/>\r\n        <Calendar\r\n        onChange={(date)=>setPredicate('startDate',date as Date)}\r\n        value={predicate.get('startDate')|| new Date()}\r\n        />\r\n\r\n        </>\r\n    )\r\n})","import { observer } from \"mobx-react-lite\";\r\nimport React, { SyntheticEvent } from \"react\";\r\nimport { Button, Reveal } from \"semantic-ui-react\";\r\nimport { Profile } from \"../../app/models/profile\";\r\nimport { useStore } from \"../../app/stores/store\";\r\n\r\ninterface Props {\r\n  profile: Profile;\r\n}\r\n\r\nexport default observer(function FollowButton({ profile }: Props) {\r\n  const { profileStore, userStore } = useStore();\r\n  const { updateFollowing, loading } = profileStore;\r\n\r\n  if(userStore.user?.username === profile.username) return null;\r\n\r\n  function handleFollow(e: SyntheticEvent, username:string){\r\n      e.preventDefault();\r\n      profile.following ? updateFollowing(username,false) : updateFollowing(username,true);\r\n  }\r\n\r\n\r\n  return (\r\n    <Reveal animated=\"move\">\r\n      <Reveal.Content visible style={{ width: \"100%\" }}>\r\n        <Button fluid color=\"teal\" content={profile.following?\"Following\":\"Not following\"} />\r\n      </Reveal.Content>\r\n      <Reveal.Content hidden style={{ width: \"100%\" }}>\r\n        <Button\r\n          fluid\r\n          basic\r\n          color={profile.following ? \"red\" : \"green\"}\r\n          content={profile.following ? \"Unfollow\" : \"Follow\"}\r\n          loading={loading}\r\n          onClick={(e)=>handleFollow(e,profile.username)}\r\n        />\r\n      </Reveal.Content>\r\n    </Reveal>\r\n  );\r\n});\r\n","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Card, Icon, Image } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\n\r\ninterface Props{\r\n    profile: Profile\r\n}\r\n\r\nexport default observer(function ProfileCard({profile}:Props){\r\n    \r\n    function truncate(str: string | undefined) {\r\n        if (str) {\r\n            return str.length > 40 ? str.substring(0, 37) + '...' : str;\r\n        }\r\n    }\r\n    \r\n    return(\r\n        <Card as={Link} to={`/profiles/${profile.username}`}>\r\n        <Image src={profile.image || '/assets/user.png'}/>\r\n        <Card.Content>\r\n            <Card.Header>{profile.displayName}</Card.Header>\r\n            <Card.Description>{truncate(profile.bio)}</Card.Description>\r\n        </Card.Content>\r\n        <Card.Content extra>\r\n          <Icon name='user'/>\r\n          {profile.followersCount} followers\r\n        </Card.Content>\r\n        <FollowButton profile={profile}/>\r\n\r\n        </Card>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Image, List, Popup } from 'semantic-ui-react';\r\nimport { Profile } from '../../../app/models/profile';\r\nimport ProfileCard from '../../profiles/ProfileCard';\r\n\r\ninterface Props{\r\n    attendees :Profile[];\r\n}\r\n\r\n\r\nexport default observer(function ActivityListItemAttendee({attendees}:Props){\r\n    const styles={\r\n        borderColor:'orange',\r\n        borderWidth: 3\r\n    }\r\n return (\r\n     <List horizontal>\r\n         {\r\n             attendees.map(attendee=>(\r\n                 <Popup\r\n                 hoverable\r\n                 key={attendee.username}\r\n                 trigger={\r\n                 <List.Item key={attendee.username} as={Link} to={`/profiles/${attendee.username}`}>\r\n                <Image \r\n                size='mini' \r\n                bordered\r\n                style={attendee.following? styles : null}\r\n                circular \r\n                src={attendee.image || '/assets/user.png'}/>\r\n                </List.Item>\r\n                 }\r\n                 >\r\n                     <Popup.Content>\r\n                         <ProfileCard profile={attendee}/>\r\n                     </Popup.Content>\r\n\r\n                 </Popup>\r\n                \r\n             ))\r\n         }\r\n     </List>\r\n )\r\n})","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Icon, Item, Label, Segment } from 'semantic-ui-react'\r\nimport { Activity } from '../../../app/models/activity';\r\nimport {format} from 'date-fns'\r\nimport ActivityListItemAttendee from './ActivityListItemAttendee';\r\n\r\ninterface Props{\r\n    activity: Activity\r\n}\r\n\r\nexport default function ActivityListItem({activity}:Props){\r\n    \r\n    return(\r\n        <Segment.Group>\r\n            <Segment>\r\n            {activity.isCancelled && \r\n                <Label style={{textAlign:'center'}}\r\n                attached='top'\r\n                ribbon color='red' content='Cancelled'/>\r\n                }\r\n                <Item.Group>\r\n                    <Item>\r\n                        <Item.Image size='tiny' circular src={activity.host?.image || '/assets/user.png'}/>\r\n                        <Item.Content>\r\n                            <Item.Header as={Link} to={`/activities/${activity.id}`}>{activity.title}</Item.Header>\r\n                        <Item.Description>Hosted by <Link to={`/profiles/${activity.hostUsername}`}>{activity.host?.displayName}</Link></Item.Description>\r\n                        {activity.isHost && (\r\n                            <Item.Description>\r\n                                <Label basic color='orange'>\r\n                                You are hosting this activity\r\n                                </Label>\r\n                            </Item.Description>\r\n                        )}\r\n                        {activity.isGoing && !activity.isHost && (\r\n                            <Item.Description>\r\n                                <Label basic color='green'>\r\n                                You are going to this activity\r\n                                </Label>\r\n                            </Item.Description>\r\n                        )}\r\n                        </Item.Content>\r\n                    </Item>\r\n                </Item.Group>\r\n            </Segment> \r\n            <Segment>\r\n                <span>\r\n                    <Icon name='clock'/> {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n                    <Icon name='marker'/> {activity.venue}\r\n                </span>\r\n            </Segment>\r\n            <Segment secondary>\r\n                <ActivityListItemAttendee attendees={activity.attendees!}/>\r\n            </Segment>\r\n            <Segment clearing>\r\n                <span>{activity.description}</span>\r\n                <Button\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                color='teal'\r\n                floated='right'\r\n                content='View'\r\n                />\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, { Fragment } from 'react';\r\nimport {Header } from 'semantic-ui-react';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport ActivityListItem from './ActivityListItem';\r\n\r\n\r\nexport default observer( function ActivityList(){\r\n\r\n    const {activityStore} = useStore();\r\n    const {groupedActivites} = activityStore\r\n\r\n  \r\n\r\n\r\n    return(\r\n        <>\r\n        {groupedActivites.map(([group,activities])=>(\r\n            <Fragment key={group}>\r\n              <Header sub color='teal'>\r\n                  {group}\r\n              </Header>\r\n               {activities.map(activity=>(\r\n                <ActivityListItem key={activity.id} activity={activity}/>\r\n                ))}\r\n            </Fragment>\r\n        \r\n        ))}\r\n    \r\n    </>\r\n)\r\n})","import React, { Fragment } from 'react';\r\nimport { Segment, Button, Placeholder } from 'semantic-ui-react';\r\n\r\nexport default function ActivityListItemPlaceholder() {\r\n    return (\r\n        <Fragment>\r\n            <Placeholder fluid style={{ marginTop: 25 }}>\r\n                <Segment.Group>\r\n                    <Segment style={{ minHeight: 110 }}>\r\n                        <Placeholder>\r\n                            <Placeholder.Header image>\r\n                                <Placeholder.Line />\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Header>\r\n                            <Placeholder.Paragraph>\r\n                                <Placeholder.Line />\r\n                            </Placeholder.Paragraph>\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment>\r\n                        <Placeholder>\r\n                            <Placeholder.Line />\r\n                            <Placeholder.Line />\r\n                        </Placeholder>\r\n                    </Segment>\r\n                    <Segment secondary style={{ minHeight: 70 }} />\r\n                    <Segment clearing>\r\n                        <Button disabled color='blue' floated='right' content='View' />\r\n                    </Segment>\r\n                </Segment.Group>\r\n            </Placeholder>\r\n        </Fragment>\r\n    );\r\n};\r\n","import { observer } from 'mobx-react-lite'\r\nimport React, { useEffect, useState } from 'react'\r\nimport InfiniteScroll from 'react-infinite-scroller'\r\nimport { Grid, Loader } from 'semantic-ui-react'\r\nimport { Pagingparams } from '../../../app/models/pagination'\r\nimport { useStore } from '../../../app/stores/store'\r\nimport ActivityFilter from './ActivityFilter'\r\n\r\nimport ActivityList from './ActivityList'\r\nimport ActivityListItemPlaceholder from './ActivityListItemPlaceholder'\r\n\r\n\r\n\r\nexport default observer( function ActivityDashboard(){\r\n    \r\n    const {activityStore} = useStore();\r\n    const {loadActivities, activityRegistry,setPagingParams,pagination} = activityStore\r\n    const [loadingNext,setLoadingNext] = useState(false);\r\n\r\n    function handleGetNext(){\r\n        setLoadingNext(true);\r\n        setPagingParams(new Pagingparams(pagination!.currentPage+1))\r\n        loadActivities().then(()=>setLoadingNext(false))\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n     if(activityRegistry.size <= 1) loadActivities();\r\n    },[activityRegistry.size,loadActivities])\r\n    \r\n  \r\n  \r\n  \r\n    \r\n    return(\r\n        <Grid>\r\n            <Grid.Column width='10'>\r\n                {activityStore.loadingInitial && !loadingNext ? (\r\n                    <>\r\n                    <ActivityListItemPlaceholder/>\r\n                    <ActivityListItemPlaceholder/>\r\n                    </>\r\n                ):(\r\n                    <InfiniteScroll\r\n                    pageStart={0}\r\n                    loadMore={handleGetNext}\r\n                    hasMore={!loadingNext && !!pagination && pagination.currentPage < pagination.totalPages}\r\n                    initialLoad={false}\r\n                    >\r\n                    <ActivityList/>\r\n                    </InfiniteScroll>\r\n                )}\r\n                \r\n            \r\n            </Grid.Column>\r\n            <Grid.Column width='6'>\r\n                <ActivityFilter/>\r\n            </Grid.Column>\r\n            <Grid.Column width={10}>\r\n                <Loader  active={loadingNext}/>\r\n            </Grid.Column>\r\n        </Grid>\r\n    )\r\n})\r\n","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    label?: string;\r\n    type?: string;\r\n\r\n}\r\n\r\n\r\nexport default function MyTextInput(props:Props){\r\n    const [field,meta] = useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n           <label>{props.label}</label>\r\n           <input {...field} {...props}/>\r\n           {meta.touched && meta.error ? (\r\n               <Label basic color='red'>{meta.error}</Label>\r\n           ): null}\r\n        </Form.Field>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header, Label } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\nexport default observer(function LoginForm(){\r\n    const {userStore} = useStore();\r\n    return(\r\n        <Formik\r\n        initialValues={{email: '', password: '', error: null}}\r\n        onSubmit={(values, {setErrors}) => userStore.login(values).catch(error => \r\n            setErrors({error: 'Invalid email or password'}))}\r\n    >\r\n        {({handleSubmit, isSubmitting, errors}) => (\r\n            <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                <Header as='h2' content='Login to Reactivites' color='teal' textAlign='center' />\r\n                <MyTextInput name='email' placeholder='Email' />\r\n                <MyTextInput name='password' placeholder='Password' type='password' />\r\n                <ErrorMessage \r\n                    name='error' render={() => \r\n                    <Label style={{marginBottom: 10}} basic color='red' content={errors.error}/>}\r\n                />\r\n                <Button loading={isSubmitting} positive content='Login' type='submit' fluid />\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n    )\r\n})","import React from 'react';\r\nimport { Message } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    errors:any;\r\n}\r\n\r\nexport default function ValidationErrors({errors}:Props){\r\n    return(\r\n        <Message error>\r\n            {errors && (\r\n                <Message.List>\r\n                    {errors.map((err:any,i:any)=>(\r\n                        <Message.Item key={i}>{err}</Message.Item>\r\n                    ))}\r\n                </Message.List>\r\n            )}\r\n        </Message>\r\n    )\r\n}","import { ErrorMessage, Form, Formik } from 'formik';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Button, Header } from 'semantic-ui-react';\r\nimport MyTextInput from '../../app/common/form/MyTextInput';\r\nimport { useStore } from '../../app/stores/store';\r\nimport * as Yup from 'yup';\r\nimport ValidationErrors from '../errors/ValidationError';\r\n\r\nexport default observer(function RegisterForm(){\r\n    const {userStore} = useStore();\r\n    return(\r\n        <Formik\r\n        initialValues={{displayName:'',username:'',email: '', password: '', error: null}}\r\n        onSubmit={(values, {setErrors}) => userStore.register(values).catch(error => \r\n            setErrors({error: error}))}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required(),\r\n                username: Yup.string().required(),\r\n                email: Yup.string().required().email(),\r\n                password: Yup.string().required(),\r\n\r\n            })}\r\n    >\r\n        {({handleSubmit, isSubmitting, errors, isValid,dirty}) => (\r\n            <Form className='ui form error' onSubmit={handleSubmit} autoComplete='off'>\r\n                <Header as='h2' content='Sign up to Reactivites' color='teal' textAlign='center' />\r\n                <MyTextInput name='displayName' placeholder='Display Name' />\r\n                <MyTextInput name='username' placeholder='Username' />\r\n                <MyTextInput name='email' placeholder='Email' />\r\n                <MyTextInput name='password' placeholder='Password' type='password' />\r\n                <ErrorMessage \r\n                    name='error' render={() => \r\n                 <ValidationErrors errors={errors.error}/>}\r\n               />\r\n                <Button disabled={!isValid || !dirty || isSubmitting}\r\n                 loading={isSubmitting} positive content='Register' type='submit' fluid />\r\n            </Form>\r\n        )}\r\n    </Formik>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Container, Header, Image, Segment } from 'semantic-ui-react'\r\nimport LoginForm from '../../features/users/LoginForm'\r\nimport RegisterForm from '../../features/users/RegisterForm'\r\nimport { useStore } from '../stores/store'\r\n\r\nexport default observer(function HomePage(){\r\n    const {userStore,modalStore} = useStore();\r\nreturn(\r\n   <Segment inverted textAlign='center' vertical className='masthead'>\r\n       <Container text>\r\n           <Header as='h1' inverted>\r\n               <Image size='massive' src='assets/logo.png' alt='logo' style={{marginBotton:12}}/>\r\n                Social\r\n           </Header>\r\n           {userStore.isLoggedIn ? (\r\n               <>\r\n           <Header as='h2' inverted content='Welcome to Social'/>\r\n           <Button as={Link} to='/activities' size='huge' inverted>\r\n               Go to Activities!\r\n           </Button>\r\n               </>\r\n           ):(\r\n               <>\r\n            <Button onClick={()=>modalStore.openModal(<LoginForm/>)} size='huge' inverted>\r\n            Login!\r\n        </Button>\r\n        <Button onClick={()=>modalStore.openModal(<RegisterForm/>)} size='huge' inverted>\r\n        Register!\r\n    </Button>\r\n    </>\r\n           )}\r\n           \r\n       </Container>\r\n   </Segment>\r\n)\r\n})","import React from 'react'\r\nimport { Dimmer, Loader } from 'semantic-ui-react'\r\n\r\n\r\ninterface Props{\r\n    inverted?:boolean;\r\n    content?:string;\r\n}\r\n\r\n\r\nexport default function LoadingComponent({inverted=true,content='Loading...'}:Props){\r\nreturn(\r\n    <Dimmer active={true} inverted={inverted}>\r\n        <Loader content={content}/>\r\n    </Dimmer>\r\n)\r\n}","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    rows:number;\r\n    label?: string;\r\n}\r\n\r\n\r\nexport default function MyTextArea(props:Props){\r\n    const [field,meta] = useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n           <label>{props.label}</label>\r\n           <textarea {...field} {...props}/>\r\n           {meta.touched && meta.error ? (\r\n               <Label basic color='red'>{meta.error}</Label>\r\n           ): null}\r\n        </Form.Field>\r\n    )\r\n}","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label, Select } from 'semantic-ui-react';\r\n\r\ninterface Props{\r\n    placeholder: string;\r\n    name: string;\r\n    options:any;\r\n    label?: string;\r\n}\r\n\r\n\r\nexport default function MySelectInput(props:Props){\r\n    const [field,meta,helpers] = useField(props.name);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n           <label>{props.label}</label>\r\n           <Select \r\n           clearable \r\n           value={field.value || null} \r\n           options={props.options}\r\n           onChange={(e,d)=>helpers.setValue(d.value)}\r\n           onBlur={()=>helpers.setTouched(true)}/>\r\n           {meta.touched && meta.error ? (\r\n               <Label basic color='red'>{meta.error}</Label>\r\n           ): null}\r\n        </Form.Field>\r\n    )\r\n}","export const categoryOptions =\r\n[\r\n    {text:'Drinks', value:'drinks'},\r\n    {text:'Culture', value:'culture'},\r\n    {text:'Film', value:'film'},\r\n    {text:'Food', value:'food'},\r\n    {text:'Music', value:'music'},\r\n    {text:'Travel', value:'travel'}\r\n]","import { useField } from 'formik'\r\nimport React from 'react'\r\nimport { Form, Label } from 'semantic-ui-react';\r\nimport DatePicker, { ReactDatePickerProps } from 'react-datepicker';\r\n\r\nexport default function MyDateInput(props:Partial<ReactDatePickerProps>){\r\n    const [field,meta,helpers] = useField(props.name!);\r\n    return(\r\n        <Form.Field error={meta.touched && !!meta.error}>\r\n           <DatePicker\r\n           {...field}\r\n           {...props}\r\n           selected={(field.value && new Date(field.value)) || null}\r\n           onChange={value => helpers.setValue(value)}\r\n           />\r\n           {meta.touched && meta.error ? (\r\n               <Label basic color='red'>{meta.error}</Label>\r\n           ): null}\r\n        </Form.Field>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React, {useEffect, useState } from 'react';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport { Button, Header, Segment } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store';\r\nimport {v4 as uuid} from 'uuid';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Yup from 'yup';\r\nimport { Formik,Form } from 'formik';\r\nimport MyTextInput from '../../../app/common/form/MyTextInput';\r\nimport MyTextArea from '../../../app/common/form/MyTextArea';\r\nimport MySelectInput from '../../../app/common/form/MySelectInput';\r\nimport { categoryOptions } from '../../../app/common/options/categoryOptions';\r\nimport MyDateInput from '../../../app/common/form/MyDateInput';\r\nimport { ActivityFormValues } from '../../../app/models/activity';\r\n\r\n\r\n\r\nexport default observer(function ActivityForm(){\r\n\r\n    const history = useHistory()\r\n     \r\n    const {activityStore} = useStore();\r\n    const {loadActivity,createActivity,updateActivity,loadingInitial} = activityStore;\r\n    const {id} = useParams<{id: string}>();\r\n\r\n    const [activity,setActivity]=useState<ActivityFormValues>(new ActivityFormValues());\r\n\r\n    const validationSchema = Yup.object({\r\n        title: Yup.string().required('The activity title is required'),\r\n        description: Yup.string().required('The activity description is required'),\r\n        category: Yup.string().required(),\r\n        date: Yup.string().required('Date is required').nullable(),\r\n        venue: Yup.string().required(),\r\n        city: Yup.string().required()\r\n\r\n\r\n    })\r\n    \r\n    useEffect(()=>{\r\n        if(id) loadActivity(id).then(activity=>setActivity(new ActivityFormValues(activity)))\r\n    },[id,loadActivity])\r\n\r\n    function handleFormSubmit(activity:ActivityFormValues){\r\n        if( !activity.id){\r\n           let newActivity = {\r\n               ...activity,\r\n               id:uuid()\r\n           }\r\n           createActivity(newActivity).then(()=>{\r\n             history.push(`/activities/${newActivity.id}`)\r\n           })\r\n        }else{\r\n            updateActivity(activity).then(()=>{\r\n                history.push(`/activities/${activity.id}`)\r\n            })\r\n        }\r\n}\r\n\r\n\r\n\r\n    if (loadingInitial) return <LoadingComponent content='Loading activity...'/>\r\n\r\n    return (\r\n        <Segment clearing>\r\n            <Header content='Activity Details' sub color='teal'/>\r\n            <Formik\r\n            validationSchema={validationSchema}\r\n            enableReinitialize initialValues={activity} onSubmit={values=>handleFormSubmit(values)}>\r\n               {({ handleSubmit,isValid,isSubmitting,dirty})=>(\r\n                <Form className='ui form' onSubmit={handleSubmit} autoComplete='off'>\r\n                <MyTextInput name='title' placeholder='Title'/>\r\n                <MyTextArea rows={3} placeholder='Description' name='description'/>\r\n                <MySelectInput options={categoryOptions} placeholder='Category' name='category' />\r\n                <MyDateInput \r\n                placeholderText='Date' \r\n                showTimeSelect\r\n                timeCaption='time'\r\n                dateFormat='MMMM d, yyyy h:mm aa'\r\n                name='date' />\r\n                <Header content='Location Details' sub color='teal'/>\r\n                <MyTextInput placeholder='City' name='city'  />\r\n                <MyTextInput placeholder='Venue' name='venue'  />\r\n                 <Button \r\n                 disabled={isSubmitting || !dirty || !isValid}\r\n                 loading={isSubmitting} floated='right' \r\n                 positive type='submit' content='Submit'/>\r\n                 <Button as={Link} to='/activities' floated='right' type='button' content='Cancel'/>\r\n\r\n            </Form>\r\n               )}\r\n            </Formik>\r\n            \r\n        </Segment>\r\n    )\r\n})","import {Formik,Form, Field, FieldProps} from 'formik'\r\nimport {observer} from 'mobx-react-lite'\r\nimport React, {useEffect} from 'react'\r\nimport {Link} from 'react-router-dom'\r\nimport * as Yup from 'yup';\r\nimport {\r\n    Segment,\r\n    Header,\r\n    Comment,\r\n    Loader\r\n} from 'semantic-ui-react'\r\nimport {useStore} from '../../../app/stores/store'\r\nimport { formatDistanceToNow } from 'date-fns';\r\n\r\ninterface Props {\r\n    activityId: string;\r\n}\r\n\r\nexport default observer(function ActivityDetailedChat({activityId} : Props) {\r\n\r\n\r\n    const {commentStore} = useStore();\r\n\r\n    useEffect(() => {\r\n        if (activityId) {\r\n            commentStore.createHubConnection(activityId)\r\n        }\r\n        return() => {\r\n            commentStore.clearComments();\r\n        }\r\n    }, [commentStore, activityId])\r\n\r\n    return (\r\n        <>\r\n            <Segment textAlign='center' attached='top' inverted color='teal'\r\n                style={\r\n                    {border: 'none'}\r\n            }>\r\n                <Header>Chat about this event</Header>\r\n            </Segment>\r\n            <Segment attached clearing>\r\n            <Formik\r\n                    onSubmit={(values, { resetForm }) =>\r\n                        commentStore.addComment(values).then(() => resetForm())}\r\n                    initialValues={{ body: '' }}\r\n                    validationSchema={Yup.object({\r\n                        body: Yup.string().required()\r\n                    })}\r\n                >\r\n                    {({ isSubmitting, isValid, handleSubmit }) => (\r\n                        <Form className='ui form'>\r\n                            <Field name='body'>\r\n                                {(props: FieldProps) => (\r\n                                    <div style={{ position: 'relative' }}>\r\n                                        <Loader active={isSubmitting} />\r\n                                        <textarea\r\n                                            placeholder='Enter your comment (Enter to submit, SHIFT + enter for new line)'\r\n                                            rows={2}\r\n                                            {...props.field}\r\n                                            onKeyPress={e => {\r\n                                                if (e.key === 'Enter' && e.shiftKey) {\r\n                                                    return;\r\n                                                }\r\n                                                if (e.key === 'Enter' && !e.shiftKey) {\r\n                                                    e.preventDefault();\r\n                                                    isValid && handleSubmit();\r\n                                                }\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                )}\r\n                            </Field>\r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n                <Comment.Group> {\r\n                    commentStore.comments.map(comment => (\r\n                        <Comment key={comment.id}>\r\n                            <Comment.Avatar src={\r\n                                comment.image || '/assets/user.png'\r\n                            }/>\r\n                            <Comment.Content>\r\n                                <Comment.Author as={Link}\r\n                                    to={\r\n                                        `/profiles/${\r\n                                            comment.username\r\n                                        }`\r\n                                }>\r\n                                    {\r\n                                    comment.displayName\r\n                                }</Comment.Author>\r\n                                <Comment.Metadata>\r\n                                    <div>{\r\n                                       formatDistanceToNow(comment.createdAt)\r\n                                    } ago</div>\r\n                                </Comment.Metadata>\r\n                                <Comment.Text style={{whiteSpace:'pre-wrap'}}>{\r\n                                    comment.body \r\n                                } </Comment.Text>\r\n                            </Comment.Content>\r\n                        </Comment>\r\n                    ))\r\n                }\r\n\r\n                    \r\n\r\n\r\n                </Comment.Group>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport { Link } from 'react-router-dom';\r\nimport {Button, Header, Item, Segment, Image, Label} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\nimport { useStore } from '../../../app/stores/store';\r\n\r\nconst activityImageStyle = {\r\n    filter: 'brightness(30%)'\r\n};\r\n\r\nconst activityImageTextStyle = {\r\n    position: 'absolute',\r\n    bottom: '5%',\r\n    left: '5%',\r\n    width: '100%',\r\n    height: 'auto',\r\n    color: 'white'\r\n};\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer (function ActivityDetailedHeader({activity}: Props) {\r\n    const{activityStore:{updateAttendance,loading,cancelActivityToggle}} = useStore();\r\n    return (\r\n        <Segment.Group>\r\n            <Segment basic attached='top' style={{ padding: '0' }}>\r\n                {activity.isCancelled &&\r\n                    <Label style={{ position: 'absolute', zIndex: 1000, left: -14, top: 20 }}\r\n                        ribbon color='red' content='Cancelled' />\r\n                }\r\n                <Image src={`/assets/categoryImages/${activity.category}.jpg`} fluid style={activityImageStyle}/>\r\n                <Segment style={activityImageTextStyle} basic>\r\n                    <Item.Group>\r\n                        <Item>\r\n                            <Item.Content>\r\n                                <Header\r\n                                    size='huge'\r\n                                    content={activity.title}\r\n                                    style={{color: 'white'}}\r\n                                />\r\n                                <p>{format(activity.date!,'dd MMM yyyy h:mm aa')}</p>\r\n                                <p>\r\n                                    Hosted by <strong><Link to={`/profiles/${activity.host?.username}`}>{activity.host?.displayName}</Link></strong>\r\n                                </p>\r\n                            </Item.Content>\r\n                        </Item>\r\n                    </Item.Group>\r\n                </Segment>\r\n            </Segment>\r\n            <Segment clearing attached='bottom'>\r\n                {activity.isHost ? (\r\n                    <>\r\n                    <Button\r\n                    color={activity.isCancelled?'green':'red'}\r\n                    floated='left'\r\n                    basic\r\n                    content={activity.isCancelled?'Re-activate Activity':'Cancel Activity'}\r\n                    onClick={cancelActivityToggle}\r\n                    loading={loading}\r\n                    />\r\n                    <Button as={Link} \r\n                    disabled={activity.isCancelled}\r\n                    to={`/manage/${activity.id}`} \r\n                    color='orange' floated='right'>\r\n                    Manage Event\r\n                </Button>\r\n                </>\r\n                ): activity.isGoing ? (\r\n                    <Button loading={loading} onClick={updateAttendance}>Cancel attendance</Button>\r\n                ):(\r\n                    <Button disabled={activity.isCancelled}\r\n                    loading={loading} onClick={updateAttendance} \r\n                    color='teal'>Join Activity</Button>\r\n                )}\r\n                \r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})\r\n\r\n","import { format } from 'date-fns';\r\nimport { observer } from 'mobx-react-lite';\r\nimport React from 'react'\r\nimport {Segment, Grid, Icon} from 'semantic-ui-react'\r\nimport {Activity} from \"../../../app/models/activity\";\r\n\r\ninterface Props {\r\n    activity: Activity\r\n}\r\n\r\nexport default observer(function ActivityDetailedInfo({activity}: Props) {\r\n    return (\r\n        <Segment.Group>\r\n            <Segment attached='top'>\r\n                <Grid>\r\n                    <Grid.Column width={1}>\r\n                        <Icon size='large' color='teal' name='info'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n                        <p>{activity.description}</p>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='calendar' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={15}>\r\n            <span>\r\n            {format(activity.date!,'dd MMM yyyy h:mm aa')}\r\n            </span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n            <Segment attached>\r\n                <Grid verticalAlign='middle'>\r\n                    <Grid.Column width={1}>\r\n                        <Icon name='marker' size='large' color='teal'/>\r\n                    </Grid.Column>\r\n                    <Grid.Column width={11}>\r\n                        <span>{activity.venue}, {activity.city}</span>\r\n                    </Grid.Column>\r\n                </Grid>\r\n            </Segment>\r\n        </Segment.Group>\r\n    )\r\n})","import React from 'react'\r\nimport { Segment, List, Label, Item, Image } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom'\r\nimport { observer } from 'mobx-react-lite'\r\nimport { Activity } from '../../../app/models/activity'\r\n\r\ninterface Props{\r\n    activity:Activity;\r\n}\r\n\r\nexport default observer(function ActivityDetailedSidebar ({activity:{attendees,host}}:Props) {\r\n  if(!attendees) return null;\r\n\r\n    return (\r\n        <>\r\n            <Segment\r\n                textAlign='center'\r\n                style={{ border: 'none' }}\r\n                attached='top'\r\n                secondary\r\n                inverted\r\n                color='teal'\r\n            >\r\n               {attendees.length}{attendees.length === 1 ? 'Person' : 'People'} going\r\n            </Segment>\r\n            <Segment attached>\r\n                <List relaxed divided>\r\n                    {attendees.map(attendee=>(\r\n                        <Item key={attendee.username} style={{ position: 'relative' }}>\r\n                            {attendee.username === host?.username &&\r\n                        <Label\r\n                            style={{ position: 'absolute' }}\r\n                            color='orange'\r\n                            ribbon='right'\r\n                        >\r\n                            Host\r\n                        </Label>}\r\n                        <Image size='tiny' src={attendee.image || '/assets/user.png'} />\r\n                        <Item.Content verticalAlign='middle'>\r\n                            <Item.Header as='h3'>\r\n                                <Link to={`/profiles/${attendee.username}`}>{attendee.displayName}</Link>\r\n                            </Item.Header>\r\n                            {attendee.following &&\r\n                            <Item.Extra style={{ color: 'orange' }}>Following</Item.Extra>\r\n                            }</Item.Content>\r\n                    </Item>\r\n                    ))}\r\n                </List>\r\n            </Segment>\r\n        </>\r\n\r\n    )\r\n})\r\n\r\n\r\n\r\n\r\n","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react'\r\nimport { useParams } from 'react-router';\r\nimport {Grid } from 'semantic-ui-react'\r\nimport LoadingComponent from '../../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../../app/stores/store'\r\nimport ActivityDetailedChat from './ActivityDetailedChat';\r\nimport ActivityDetailedHeader from './ActivityDetailedHeader';\r\nimport ActivityDetailedInfo from './ActivityDetailedInfo';\r\nimport ActivityDetailedSidebar from './ActivityDetailedSidebar';\r\n\r\n\r\nexport default observer(function ActivityDetails() {\r\n  const {activityStore}= useStore();\r\n  const {selectedActivity:activity,loadActivity,clearSelectedActivity,loadingInitial} = activityStore;\r\n  const {id} = useParams<{id:string}>();\r\n\r\n  useEffect(()=>{\r\n   if(id) loadActivity(id);\r\n   return ()=>clearSelectedActivity();\r\n  },[id,loadActivity,clearSelectedActivity])\r\n\r\n\r\n  if(loadingInitial || !activity) return <LoadingComponent/>;\r\n    return(\r\n        <Grid>\r\n          <Grid.Column width={10}>\r\n            <ActivityDetailedHeader activity={activity}/>\r\n            <ActivityDetailedInfo activity={activity}/>\r\n            <ActivityDetailedChat activityId={activity.id}/>\r\n          </Grid.Column>\r\n          <Grid.Column width={6}>\r\n             <ActivityDetailedSidebar activity={activity }/>\r\n          </Grid.Column>\r\n        </Grid>\r\n    )\r\n})","import React, { useState } from 'react';\r\nimport {Button, Header, Segment} from \"semantic-ui-react\";\r\nimport axios from 'axios';\r\nimport ValidationErrors from './ValidationError';\r\n\r\nexport default function TestErrors() {\r\n    const baseUrl = process.env.REACT_APP_API_URL;\r\n\r\n    const [errors,setErrors] = useState(null)\r\n\r\n    function handleNotFound() {\r\n        axios.get(baseUrl + 'buggy/not-found').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadRequest() {\r\n        axios.get(baseUrl + 'buggy/bad-request').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleServerError() {\r\n        axios.get(baseUrl + 'buggy/server-error').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleUnauthorised() {\r\n        axios.get(baseUrl + 'buggy/unauthorised').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleBadGuid() {\r\n        axios.get(baseUrl + 'activities/notaguid').catch(err => console.log(err.response));\r\n    }\r\n\r\n    function handleValidationError() {\r\n        axios.post(baseUrl + 'activities', {}).catch(err => setErrors(err));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Header as='h1' content='Test Error component' />\r\n            <Segment>\r\n                <Button.Group widths='7'>\r\n                    <Button onClick={handleNotFound} content='Not Found' basic primary />\r\n                    <Button onClick={handleBadRequest} content='Bad Request' basic primary />\r\n                    <Button onClick={handleValidationError} content='Validation Error' basic primary />\r\n                    <Button onClick={handleServerError} content='Server Error' basic primary />\r\n                    <Button onClick={handleUnauthorised} content='Unauthorised' basic primary />\r\n                    <Button onClick={handleBadGuid} content='Bad Guid' basic primary />\r\n                </Button.Group>\r\n            </Segment>\r\n            {errors &&\r\n            <ValidationErrors  errors={errors}/>\r\n            }\r\n        </>\r\n    )\r\n}","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Button, Header, Icon, Segment } from 'semantic-ui-react'\r\n\r\n\r\nexport default function NotFound(){\r\n    return(\r\n        <Segment placeholder>\r\n            <Header icon>\r\n                <Icon name='search'/>\r\n                Oops - we have looked everywhere and could not find this.\r\n            </Header>\r\n            <Segment.Inline>\r\n                <Button as={Link} to='/activities' primary>\r\n                    Return to activities page\r\n                </Button>\r\n            </Segment.Inline>\r\n        </Segment>\r\n    )\r\n}","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Container, Header, Segment } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store';\r\n\r\n\r\nexport default observer(function ServerError(){\r\n    const {commonStore} = useStore();\r\n    return(\r\n        <Container>\r\n            <Header as='h1' content='Server error'/>\r\n            <Header sub as='h5' color='red' content={commonStore.error?.message}/>\r\n            {commonStore.error?.details &&\r\n            <Segment>\r\n                <Header as='h4' content='Stack trace' color='teal'/>\r\n                <code style={{marginTop:'10px'}}>{commonStore.error.details}</code>\r\n            </Segment>\r\n            }\r\n        </Container>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Modal } from 'semantic-ui-react';\r\nimport { useStore } from '../../stores/store';\r\n\r\nexport default observer(function ModalContainer(){\r\nconst {modalStore} = useStore();\r\n\r\nreturn(\r\n    <Modal open={modalStore.modal.open} onClose={modalStore.closeModal} size='mini'>\r\n        <Modal.Content>\r\n            {modalStore.modal.body}\r\n        </Modal.Content>\r\n    </Modal>\r\n)\r\n})","import React from 'react';\r\nimport { Cropper } from 'react-cropper';\r\nimport 'cropperjs/dist/cropper.css'\r\n\r\ninterface Props{\r\n    imagePreview: string;\r\n    setCropper: (cropper: Cropper) => void;\r\n}\r\n\r\nexport default function PhotoWidgetCropper({imagePreview,setCropper}:Props){\r\n    return(\r\n        <Cropper\r\n        src={imagePreview}\r\n        style={{height:200,width:'100%'}}\r\n        initialAspectRatio={1}\r\n        aspectRatio={1}\r\n        preview='.img-preview'\r\n        guides={false}\r\n        viewMode={1}\r\n        autoCropArea={1}\r\n        background={false}\r\n        onInitialized={cropper=> setCropper(cropper)}\r\n        />\r\n            \r\n    )\r\n}","import React, { useCallback } from 'react'\r\nimport { useDropzone } from 'react-dropzone'\r\nimport { Header, Icon } from 'semantic-ui-react'\r\n\r\ninterface Props{\r\n    setFiles: (files: any) => void;\r\n}\r\n\r\nexport default function PhotoWidgetDropzone({setFiles}:Props){\r\n    \r\n    const dzStyles = {\r\n        border: 'dashed 3px #eee',\r\n        borderColor: 'eee',\r\n        borderRadius: '5px',\r\n        paddingTop: '30px',\r\n        textAlign: 'center' as 'center',\r\n        height: 200\r\n    }\r\n\r\n    const dzActive ={\r\n        borderColor: 'green'\r\n    }\r\n    \r\n    const onDrop = useCallback(acceptedFiles=>{\r\n         setFiles(acceptedFiles.map((file:any) => Object.assign(file,{\r\n             preview: URL.createObjectURL(file)\r\n         })))\r\n    },[setFiles])\r\n\r\n    const {getRootProps,getInputProps, isDragActive} = useDropzone({onDrop})\r\n\r\n    return(\r\n        <div {...getRootProps()} style={isDragActive ? {...dzStyles,...dzActive} : dzStyles}>\r\n            <input {...getInputProps()}/>\r\n            <Icon name='upload' size='huge'/>\r\n            <Header content='Drop image here'/>\r\n\r\n        </div>\r\n    )\r\n}","import React, {useEffect, useState} from 'react'\r\nimport {Button, Grid, Header} from 'semantic-ui-react'\r\nimport PhotoWidgetCropper from './PhotoWidgetCropper';\r\nimport PhotoWidgetDropzone from './PhotoWidgetDropzone'\r\n\r\ninterface Props {\r\n    loading: boolean;\r\n    uploadPhoto: (file : Blob) => void;\r\n}\r\n\r\nexport default function PhotoUploadWidget({loading, uploadPhoto} : Props) {\r\n    const [files, setFiles] = useState < any > ([]);\r\n    const [cropper, setCropper] = useState < Cropper > ();\r\n\r\n    function onCrop() {\r\n        if (cropper) {\r\n            cropper.getCroppedCanvas().toBlob(blob => uploadPhoto(blob !));\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        return() => {\r\n            files.forEach((file : any) => URL.revokeObjectURL(file.preview))\r\n        }\r\n    }, [files])\r\n\r\n    return (\r\n        <Grid>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' contents='Step 1 - Add Photo'/>\r\n                <PhotoWidgetDropzone setFiles={setFiles}/>\r\n            </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' contents='Step 2 - Resize image'/> {\r\n                files && files.length > 0 && (\r\n                    <PhotoWidgetCropper setCropper={setCropper}\r\n                        imagePreview={\r\n                            files[0].preview\r\n                        }/>\r\n                )\r\n            } </Grid.Column>\r\n            <Grid.Column width={1}/>\r\n            <Grid.Column width={4}>\r\n                <Header sub color='teal' contents='Step 3 - Review & Upload'/> {\r\n                files && files.length > 0 && <>\r\n                    <div className='img-preview'\r\n                        style={\r\n                            {\r\n                                minHeight: 200,\r\n                                overflow: 'hidden'\r\n                            }\r\n                        }/>\r\n                    <Button.Group widths={2}>\r\n                        <Button loading={loading}\r\n                            onClick={onCrop}\r\n                            positive\r\n                            icon='check'/>\r\n                        <Button disabled={loading}\r\n                            onClick={\r\n                                () => setFiles([])\r\n                            }\r\n                            icon='close'/>\r\n                    </Button.Group>\r\n                </>\r\n            } </Grid.Column>\r\n        </Grid>\r\n    )\r\n}\r\n","import {observer} from 'mobx-react-lite';\r\nimport React, {SyntheticEvent, useState} from 'react';\r\nimport {\r\n    Card,\r\n    Header,\r\n    Tab,\r\n    Image,\r\n    Grid,\r\n    Button\r\n} from 'semantic-ui-react';\r\nimport PhotoUploadWidget from '../../app/common/imageUpload/PhotoUploadWidgets';\r\nimport {Photo, Profile} from '../../app/models/profile';\r\nimport {useStore} from '../../app/stores/store';\r\n\r\ninterface Props {\r\n    profile: Profile\r\n}\r\nexport default observer(function ProfilePhotos({profile} : Props) {\r\n    const {profileStore} = useStore();\r\n    const {isCurrentUser,uploadPhoto,deletePhoto,\r\n        loading,uploading,setMainPhoto} = profileStore;\r\n    const [addPhotoMode, setAddPhotoMode] = useState(false);\r\n    const [target,setTarget] = useState('');\r\n\r\n    function handleSetMainPhoto(photo:Photo,e:SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        setMainPhoto(photo);\r\n    }\r\n    \r\n    function handlePhotoUpload(file: Blob){\r\n        uploadPhoto(file).then(()=>setAddPhotoMode(false))\r\n    }\r\n\r\n    function handleDeletePhoto(photo:Photo,e:SyntheticEvent<HTMLButtonElement>){\r\n        setTarget(e.currentTarget.name);\r\n        deletePhoto(photo);\r\n    }\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='image' content='Photos'/> {\r\n                    isCurrentUser && (\r\n                        <Button floated='right' basic\r\n                            content={\r\n                                addPhotoMode ? 'Cancel' : 'Add Photo'\r\n                            }\r\n                            onClick={\r\n                                () => setAddPhotoMode(!addPhotoMode)\r\n                            }/>\r\n                    )\r\n                } </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    {\r\n                    addPhotoMode ? (\r\n                        <PhotoUploadWidget uploadPhoto={handlePhotoUpload} loading={uploading}/>\r\n                    ) : (\r\n                        <Card.Group itemsPerRow={5}>\r\n                            {\r\n                            profile.photos?.map(photo => (\r\n                                <Card key={\r\n                                    photo.id\r\n                                }>\r\n                                    <Image src={\r\n                                        photo.url\r\n                                    }/>\r\n                                    {isCurrentUser && (\r\n                                        <Button.Group fluid width={2}>\r\n                                            <Button \r\n                                            basic\r\n                                            color='green'\r\n                                            content='Main'\r\n                                            name={'main'+photo.id}\r\n                                            disabled={photo.isMain}\r\n                                            loading={target === 'main'+photo.id && loading}\r\n                                            onClick={e=>handleSetMainPhoto(photo,e)}\r\n                                            />\r\n                                            <Button \r\n                                            basic \r\n                                            color='red' \r\n                                            icon='trash'\r\n                                            name={photo.id}\r\n                                            disabled={photo.isMain}\r\n                                            loading={target === photo.id && loading}\r\n                                            onClick={e=>handleDeletePhoto(photo,e)}\r\n                                            />\r\n                                        </Button.Group>\r\n                                    )}\r\n                                </Card>\r\n                            ))\r\n                        } </Card.Group>\r\n                    )\r\n                } </Grid.Column>\r\n            </Grid>\r\n\r\n        </Tab.Pane>\r\n    )\r\n})\r\n","import { Form, Formik } from \"formik\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Button } from \"semantic-ui-react\";\r\nimport MyTextArea from \"../../app/common/form/MyTextArea\";\r\nimport MyTextInput from \"../../app/common/form/MyTextInput\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nimport * as Yup from 'yup';\r\n\r\ninterface Props {\r\n    setEditMode: (editMode: boolean) => void;\r\n}\r\n\r\nexport default observer(function ProfileEditForm({setEditMode}: Props) {\r\n    const {profileStore: {profile, updateProfile}} = useStore();\r\n    return (\r\n        <Formik\r\n            initialValues={{displayName: profile?.displayName, bio: profile?.bio}}\r\n            onSubmit={values => {\r\n                updateProfile(values).then(() => {\r\n                    setEditMode(false);\r\n                })\r\n            }}\r\n            validationSchema={Yup.object({\r\n                displayName: Yup.string().required()\r\n            })}\r\n        >\r\n            {({isSubmitting, isValid, dirty}) => (\r\n                <Form className='ui form'>\r\n                    <MyTextInput placeholder='Display Name' name='displayName' />\r\n                    <MyTextArea rows={3} placeholder='Add your bio' name='bio' />\r\n                    <Button \r\n                        positive\r\n                        type='submit'\r\n                        loading={isSubmitting}\r\n                        content='Update profile'\r\n                        floated='right'\r\n                        disabled={!isValid || !dirty}\r\n                    />\r\n                </Form>\r\n            )}\r\n        </Formik>\r\n    )\r\n})","import React, {useState} from 'react';\r\nimport {useStore} from \"../../app/stores/store\";\r\nimport {Button, Grid, Header, Tab} from \"semantic-ui-react\";\r\nimport ProfileEditForm from \"./ProfileEditForm\";\r\nimport { observer } from 'mobx-react-lite';\r\n\r\nexport default observer(function ProfileAbout() {\r\n    const {profileStore} = useStore();\r\n    const {isCurrentUser, profile} = profileStore;\r\n    const [editMode, setEditMode] = useState(false);\r\n\r\n    return (\r\n        <Tab.Pane>\r\n            <Grid>\r\n                <Grid.Column width='16'>\r\n                    <Header floated='left' icon='user' content={`About ${profile?.displayName}`} />\r\n                    {isCurrentUser && (\r\n                        <Button\r\n                            floated='right'\r\n                            basic\r\n                            content={editMode ? 'Cancel' : 'Edit Profile'}\r\n                            onClick={() => setEditMode(!editMode)}\r\n                        />\r\n                    )}\r\n                </Grid.Column>\r\n                <Grid.Column width='16'>\r\n                    {editMode ? <ProfileEditForm setEditMode={setEditMode} /> : <span style={{whiteSpace: 'pre-wrap'}}>{profile?.bio}</span>}\r\n\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})","import { observer } from 'mobx-react-lite'\r\nimport React from 'react'\r\nimport { Card, Grid, Header, Tab } from 'semantic-ui-react';\r\nimport { useStore } from '../../app/stores/store'\r\nimport ProfileCard from './ProfileCard';\r\n\r\nexport default observer(function ProfileFollowings(){\r\n    const {profileStore} = useStore();\r\n    const {profile,followings,loadingFollowings,activeTab} = profileStore;\r\n\r\n    return(\r\n        <Tab.Pane loading={loadingFollowings}>\r\n            <Grid>\r\n                <Grid.Column width={16}>\r\n                    <Header floated='left' icon='user' content={activeTab === 3 ? `People following ${profile?.displayName}`:`People ${profile?.displayName} is following`}/>\r\n                </Grid.Column>\r\n                <Grid.Column width={16}>\r\n                    <Card.Group itemsPerRow={4}>\r\n\r\n                        {followings.map(profile=>(\r\n                            <ProfileCard key={profile.username} profile={profile}/>\r\n                        ))}\r\n                    </Card.Group>\r\n                </Grid.Column>\r\n            </Grid>\r\n        </Tab.Pane>\r\n    )\r\n})\r\n\r\n\r\n","import React, { SyntheticEvent, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { Tab, Grid, Header, Card, Image, TabProps } from \"semantic-ui-react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { UserActivity } from \"../../app/models/profile\";\r\nimport { format } from \"date-fns\";\r\nimport { useStore } from \"../../app/stores/store\";\r\nconst panes = [\r\n  { menuItem: \"Future Events\", pane: { key: \"future\" } },\r\n  { menuItem: \"Past Events\", pane: { key: \"past\" } },\r\n  { menuItem: \"Hosting\", pane: { key: \"hosting\" } },\r\n];\r\nexport default observer(function ProfileActivities() {\r\n  const { profileStore } = useStore();\r\n  const { loadUserActivities, profile, loadingActivities, userActivities } =\r\n    profileStore;\r\n  useEffect(() => {\r\n    loadUserActivities(profile!.username);\r\n  }, [loadUserActivities, profile]);\r\n  const handleTabChange = (e: SyntheticEvent, data: TabProps) => {\r\n    loadUserActivities(\r\n      profile!.username,\r\n      panes[data.activeIndex as number].pane.key\r\n    );\r\n  };\r\n  return (\r\n    <Tab.Pane loading={loadingActivities}>\r\n      <Grid>\r\n        <Grid.Column width={16}>\r\n          <Header floated=\"left\" icon=\"calendar\" content={\"Activities\"} />\r\n        </Grid.Column>\r\n        <Grid.Column width={16}>\r\n          <Tab\r\n            panes={panes}\r\n            menu={{ secondary: true, pointing: true }}\r\n            onTabChange={(e, data) => handleTabChange(e, data)}\r\n          />\r\n          <br />\r\n          <Card.Group itemsPerRow={4}>\r\n            {userActivities.map((activity: UserActivity) => (\r\n              <Card\r\n                as={Link}\r\n                to={`/activities/${activity.id}`}\r\n                key={activity.id}\r\n              >\r\n                <Image\r\n                  src={`/assets/categoryImages/${activity.category}.jpg`}\r\n                  style={{ minHeight: 100, objectFit: \"cover\" }}\r\n                />\r\n                <Card.Content>\r\n                  <Card.Header textAlign=\"center\">{activity.title}</Card.Header>\r\n                  <Card.Meta textAlign=\"center\">\r\n                    <div>{format(new Date(activity.date), \"do LLL\")}</div>\r\n                    <div>{format(new Date(activity.date), \"h:mm a\")}</div>\r\n                  </Card.Meta>\r\n                </Card.Content>\r\n              </Card>\r\n            ))}\r\n          </Card.Group>\r\n        </Grid.Column>\r\n      </Grid>\r\n    </Tab.Pane>\r\n  );\r\n});\r\n"," import React from 'react';\r\nimport { Tab } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport ProfilePhoto from './ProfilePhoto';\r\nimport ProfileAbout from './ProfileAbout';\r\nimport ProfileFollowings from './ProfileFollowings';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileActivities from './ProfileActivities';\r\n\r\ninterface Props{\r\n    profile:Profile\r\n}\r\n\r\n export default function ProfileContent({profile}:Props){\r\n  \r\n    const {profileStore} = useStore();\r\n    \r\n    const panes = [\r\n         {menuItem: 'About', render: () => <ProfileAbout />},         \r\n         {menuItem:'Photos',render:()=><ProfilePhoto profile={profile}/>},\r\n         {menuItem:'Events',render:()=><Tab.Pane><ProfileActivities/></Tab.Pane>},\r\n         {menuItem:'Followers',render:()=><Tab.Pane><ProfileFollowings/></Tab.Pane>},\r\n         {menuItem:'Following',render:()=><Tab.Pane><ProfileFollowings/></Tab.Pane>},\r\n     ]\r\n\r\n     return(\r\n         <Tab\r\n         menu={{fluid:true, vertical: true}}\r\n         menuPosition='right'\r\n         panes={panes}\r\n         onTabChange={(e,data)=>profileStore.setActiveTab(data.activeIndex)}\r\n         />\r\n     )\r\n }","import { observer } from 'mobx-react-lite';\r\nimport React from 'react';\r\nimport { Divider, Grid, GridColumn, Header, Item, Segment, Statistic } from 'semantic-ui-react';\r\nimport { Profile } from '../../app/models/profile';\r\nimport FollowButton from './FollowButton';\r\n\r\ninterface Props{\r\n    profile: Profile\r\n}\r\n\r\nexport default observer(function ProfileHeader({profile}: Props){\r\n\r\n    return(\r\n        <Segment>\r\n            <Grid>\r\n                <Grid.Column width={12}>\r\n                    <Item.Group>\r\n                         <Item>\r\n                             <Item.Image avatar size='small' src={profile.image || '/assets/user.png'}/>\r\n                             <Item.Content verticalAlign='middle'>\r\n                                 <Header as='h1' content={profile.displayName}/>\r\n                             </Item.Content>\r\n                         </Item>\r\n                    </Item.Group>\r\n                </Grid.Column>\r\n                <GridColumn width={4}>\r\n                    <Statistic.Group widths={2}>\r\n                        <Statistic label='Followers' value={profile.followersCount}/>\r\n                        <Statistic label='Following' value={profile.followingCount}/>\r\n                    </Statistic.Group>\r\n                    <Divider/>\r\n                    <FollowButton profile={profile}/>\r\n                </GridColumn>\r\n            </Grid>\r\n        </Segment>\r\n    )\r\n})","import { observer } from 'mobx-react-lite';\r\nimport React, { useEffect } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport LoadingComponent from '../../app/layout/LoadingComponents';\r\nimport { useStore } from '../../app/stores/store';\r\nimport ProfileContent from './ProfileContent';\r\nimport ProfileHeader from './ProfileHeader';\r\n\r\nexport default observer(function ProfilePage(){\r\n    const {username} = useParams<{username:string}>();\r\n    const {profileStore} = useStore();\r\n    const {loadingProfile,loadProfile,profile,setActiveTab} = profileStore;\r\n\r\n    useEffect(()=>{\r\n        loadProfile(username);\r\n        return ()=>{\r\n            setActiveTab(0);\r\n        }\r\n    },[loadProfile,username,setActiveTab])\r\n\r\n    if(loadingProfile) return <LoadingComponent content='Loading profile...'/>\r\n\r\n    return(\r\n    <Grid>\r\n        <Grid.Column width='16'>\r\n            {profile &&\r\n            <>\r\n        <ProfileHeader profile={profile}/>\r\n        <ProfileContent profile={profile}/>\r\n            </>\r\n            }\r\n        </Grid.Column>\r\n    </Grid>\r\n)\r\n})","import React from 'react';\r\nimport { Redirect, Route, RouteComponentProps } from \"react-router\";\r\nimport { RouteProps } from \"react-router-dom\";\r\nimport { useStore } from \"../stores/store\";\r\n\r\n\r\ninterface Props extends RouteProps{\r\n    component: React.ComponentType<RouteComponentProps<any>> | React.ComponentType<any>;\r\n}\r\n\r\nexport default function PrivateRote({component:Component,...rest}:Props){\r\n    const {userStore:{isLoggedIn}} = useStore();\r\n    return(\r\n        <Route\r\n        {...rest}\r\n        render={(props)=>isLoggedIn ? <Component {...props}/> : <Redirect to='/'/>}\r\n        />\r\n    )\r\n}","import React, { Fragment, useEffect } from 'react';\nimport { Container } from 'semantic-ui-react';\nimport NavBar from './navbar';\nimport ActivityDashboard from '../../features/activities/dashboard/ActivityDashboard';\nimport { observer } from 'mobx-react-lite';\nimport { Route, Switch, useLocation } from 'react-router';\nimport HomePage from '../home/HomePage';\nimport ActivityForm from '../../features/activities/form/ActivityForm';\nimport ActivityDetails from '../../features/activities/details/ActivityDetails';\nimport TestErrors from '../../features/errors/TestError';\nimport {ToastContainer} from 'react-toastify';\nimport NotFound from '../../features/errors/NotFound';\nimport ServerError from '../../features/errors/ServerError';\nimport { useStore } from '../stores/store';\nimport LoadingComponent from './LoadingComponents';\nimport ModalContainer from '../common/modals/ModalContainer';\nimport ProfilePage from '../../features/profiles/ProfilePage';\nimport PrivateRoute from './PrivateRoute';\n\nfunction App() {\n\n  const location = useLocation();\n  const {commonStore,userStore} = useStore();\n\n  useEffect(()=>{\n    if(commonStore.token){\n      userStore.getUser().finally(()=>commonStore.setAppLoaded());\n    }else{\n       commonStore.setAppLoaded();\n    }}\n  ,[commonStore,userStore])\n\n  if(!commonStore.appLoaded) return <LoadingComponent content='Loading App...'/>\n  \n  return (\n    <Fragment >\n\n      <ToastContainer position='bottom-right' hideProgressBar/>\n      <ModalContainer/>\n              <Route exact path='/' component={HomePage}/>\n              <Route path={'/(.+)'} \n              render={()=>(\n               <>\n        <NavBar/> \n        <Container style={{marginTop:'7em'}}>\n          <Switch>\n        <PrivateRoute exact path='/activities' component={ActivityDashboard}/>\n        <PrivateRoute path='/activities/:id' component={ActivityDetails}/>\n        <PrivateRoute key={location.key} path={['/createActivity','/manage/:id']} component={ActivityForm}/>\n        <PrivateRoute path='/profiles/:username' component={ProfilePage}/>\n        <PrivateRoute path='/errors' component={TestErrors}/>\n        <Route path='/server-error' component={ServerError}/>\n        <Route component={NotFound}/>\n        </Switch>\n        </Container>\n               </>\n              )}/>\n\n        \n        \n    </Fragment>\n  );\n}\n\nexport default observer(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { useEffect } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\n\r\n\r\nexport default function ScrollToTop(){\r\n    const {pathname} = useLocation();\r\n\r\n    useEffect(()=>{\r\n        window.scrollTo(0,0);\r\n    },[pathname])\r\n\r\n    return null;\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'semantic-ui-css/semantic.min.css'\nimport 'react-calendar/dist/Calendar.css'\nimport './app/layout/styles.css';\nimport 'react-toastify/dist/ReactToastify.min.css'\nimport 'react-datepicker/dist/react-datepicker.css'\nimport App from './app/layout/App';\nimport reportWebVitals from './reportWebVitals';\nimport { store, StoreContext } from './app/stores/store';\nimport {Router} from 'react-router-dom'\nimport {createBrowserHistory} from 'history';\nimport ScrollToTop from './app/layout/ScrollToTop';\n\nexport const history = createBrowserHistory();\n\nReactDOM.render(\n<StoreContext.Provider value={store}>\n  <Router history={history}>\n    <ScrollToTop/>\n  <App />\n   </Router>\n</StoreContext.Provider>\n ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}